[modes]
modes = static-gnu static-gnu-debug
        static-intel static-intel-debug
        shared-gnu shared-gnu-debug
        shared-intel shared-intel-debug
        app-gnu app-gnu-debug
        app-intel app-intel-debug

[common-variables]
$MOD_FILE     = json_module.F90
$STATIC_LIB   = libjsonfortran.a
$SHARED_LIB   = libjsonfortran.so
$OPTIMIZE     = -O2
$CSTATIC_GNU  = -c -fbacktrace -Wall -Wextra -Wno-maybe-uninitialized -Wno-unused-function -pedantic -std=f2008ts
$DEBUG_GNU    = -O0 -g3 -Warray-bounds -Wcharacter-truncation -Wline-truncation -Wimplicit-interface -Wimplicit-procedure -Wunderflow -fcheck=all -fmodule-private -ffree-line-length-132 -fimplicit-none -fbacktrace -fdump-core -finit-real=nan -std=f2008ts -fall-intrinsics
$CSTATIC_INT  = -c -std15
$DEBUG_INT    = -O0 -debug all -check all -warn all -extend-source 132 -traceback -gen-interfaces -fpe-all=0 -fp-stack-check -fstack-protector-all -ftrapuv -no-ftz -std15
$EXCLUDE_DIRS = src/json-fortran/tests
				src/json_to_map_test
				visual_studio/example

# modes templates
[template-static]
cflags_heritage = True
build_dir       = lib/
mod_dir         = mod/
obj_dir         = obj/
src             = src/json-fortran/
colors          = True
quiet           = False
log             = False
jobs            = 2
mklib           = static
target          = $MOD_FILE
output          = $STATIC_LIB
exclude_dirs    = $EXCLUDE_DIRS

[template-shared]
cflags_heritage = True
build_dir       = lib/
mod_dir         = mod/
obj_dir         = obj/
src             = src/json-fortran/
colors          = True
quiet           = False
log             = False
jobs            = 2
mklib           = shared
target          = $MOD_FILE
output          = $SHARED_LIB
exclude_dirs    = $EXCLUDE_DIRS

[template-tests]
cflags_heritage = True
build_dir       = bin/
mod_dir         = mod/
obj_dir         = obj/
src             = src/
                  src/json-fortran/
colors          = True
quiet           = False
log             = False
jobs            = 2
exclude_dirs    = $EXCLUDE_DIRS

# main modes

# library
[static-gnu]
description     = Build library with GNU gfortran by optimized-static flags
compiler        = gnu
cflags          = $CSTATIC_GNU $OPTIMIZE
template        = template-static

[static-gnu-debug]
description     = Build library with GNU gfortran by debug-static flags
compiler        = gnu
cflags          = $CSTATIC_GNU $DEBUG_GNU
template        = template-static

[static-intel]
description     = Build library with Intel Fortran by optimized-static flags
compiler        = intel
cflags          = $CSTATIC_INT $OPTIMIZE
template        = template-static

[static-intel-debug]
description     = Build library with Intel Fortran by debug-static flags
compiler        = intel
cflags          = $CSTATIC_INT $DEBUG_INT
template        = template-static

[shared-gnu]
description     = Build library with GNU gfortran by optimized-shared flags
compiler        = gnu
cflags          = $CSTATIC_GNU $OPTIMIZE
template        = template-shared

[shared-gnu-debug]
description     = Build library with GNU gfortran by debug-shared flags
compiler        = gnu
cflags          = $CSTATIC_GNU $DEBUG_GNU
template        = template-shared

[shared-intel]
description     = Build library with Intel Fortran by optimized-shared flags
compiler        = intel
cflags          = $CSTATIC_INT $OPTIMIZE
template        = template-shared

[shared-intel-debug]
description     = Build library with Intel Fortran by debug-shared flags
compiler        = intel
cflags          = $CSTATIC_INT $DEBUG_INT
template        = template-shared

# example programs
[app-gnu]
description     = Build all tests with GNU gfortran by optimized-static flags
compiler        = gnu
cflags          = $CSTATIC_GNU $OPTIMIZE
template        = template-tests

[app-gnu-debug]
description     = Build all tests with GNU gfortran by debug-static flags
compiler        = gnu
cflags          = $CSTATIC_GNU $DEBUG_GNU
template        = template-tests

[app-intel]
description     = Build all tests with Intel Fortran by optimized-static flags
compiler        = intel
cflags          = $CSTATIC_INT $OPTIMIZE
template        = template-tests

[app-intel-debug]
description     = Build all tests with Intel Fortran by debug-static flags
compiler        = intel
cflags          = $CSTATIC_INT $DEBUG_INT
template        = template-tests

# rules
[rule-makedoc]
help   = Build documentation from source files
rule_1 = rm -rf doc/html/*
rule_2 = ford ford_project.md --debug
rule_3 = cp -r doc/html/publish/* doc/html/
rule_4 = rm -rf doc/html/publish

[rule-deldoc]
help = Delete documentation
rule = rm -rf doc/html/*

[rule-delbin]
help = Delete binaries
rule = rm -rf bin/

[rule-clean]
help = Clean the project tree
rule_1 = FoBiS.py rule -ex deldoc
rule_2 = FoBiS.py rule -ex delbin
rule_3 = rm -f *.gcov

[rule-maketar]
help = Make tar archive of the project
rule = tar -czf APP_json-fortran.tar.gz *

[rule-makecoverage]
help   = Rule for performing coverage analysis
rule_1 = FoBiS.py clean -mode app-gnu
rule_2 = FoBiS.py build -mode app-gnu -coverage
rule_4 = gcov -o bin/obj/ assets/json-fortran/src/json*
rule_5 = rm -f *.gcov

[rule-coverage-analysis]
help   = Rule for performing coverage analysis and saving reports in markdown
rule_1 = FoBiS.py clean -mode app-gnu
rule_2 = FoBiS.py build -mode app-gnu -coverage
rule_4 = gcov -o exe/obj/ assets/json-fortran/src/json*
rule_5 = FoBiS.py rule -gcov_analyzer wiki/ Coverage-Analysis
rule_6 = rm -f *.gcov
